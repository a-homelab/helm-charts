# Default values for unms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ubnt/unms
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: no
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsUser: 1000
  # runAsGroup: 1000

service:
  type: ClusterIP
  port: 443

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

env:
  UNMS_USER_ID: "1000"
  DEMO: "false"
  NODE_ENV: "production"
  HTTP_PORT: "8081"
  WS_PORT: "8082"
  WS_SHELL_PORT: "8083"
  UNMS_WS_API_PORT: "8084"
  UNMS_NETFLOW_PORT: "2055"
  # SSL_CERT: ""
  PUBLIC_HTTPS_PORT: "443"
  PUBLIC_WS_PORT: "443"
  NGINX_HTTPS_PORT: "443"
  NGINX_WS_PORT: "443"
  SUSPEND_PORT: "81"
  HOST_TAG: ""
  BRANCH: master
  # http_proxy: ${http_proxy}
  # HTTP_PROXY: ${HTTP_PROXY}
  # https_proxy: ${https_proxy}
  # HTTPS_PROXY: ${HTTPS_PROXY}
  # no_proxy: ${no_proxy}
  # NO_PROXY: ${NO_PROXY}
  SECURE_LINK_SECRET: test-secret
  CLUSTER_SIZE: auto
  
  UNMS_TOKEN: test-secret
  UNMS_DEPLOYMENT: ""
  UNMS_FEATURES: ""
  USE_LOCAL_DISCOVERY: "true"

  UCRM_HOST: unms-ucrm
  UCRM_PORT: "80"

  UNMS_NGINX_HOST: unms-nginx
  UNMS_NGINX_PORT: "12345"

  UNMS_PG_HOST: unms-postgresql
  UNMS_PG_USER: unms
  UNMS_PG_PASSWORD: unms
  UNMS_PG_DB: unms
  UNMS_PG_SCHEMA: unms
  PGPASSWORD: postgres

  UNMS_RABBITMQ_HOST: unms-rabbitmq
  UNMS_RABBITMQ_PORT: "5672"
  UNMS_RABBITMQ_USER: unms
  UNMS_RABBITMQ_PASSWORD: unms
  RABBITMQ_URL: amqp://unms:unms@unms-rabbitmq:5672/

  UNMS_REDISDB_HOST: unms-redis-master
  UNMS_REDISDB_PORT: "6379"

  UNMS_FLUENTD_HOST: unms-fluentd
  UNMS_FLUENTD_PORT: "24224"

  UNMS_SIRIDB_HOST: unms-siridb
  UNMS_SIRIDB_PORT: "9000"

  USE_ALTERNATIVE_CERT_DIR: "false"

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: yes
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 5Gi
  annotations: {}
