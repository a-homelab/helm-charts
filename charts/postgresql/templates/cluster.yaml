apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "postgresql.fullname" . }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
spec:
  inheritedMetadata:
    labels:
      {{- include "postgresql.labels" . | nindent 6 }}
    annotations:
      sidecar.istio.io/inject: "false"

  imageName: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
  imagePullPolicy: {{ .Values.image.pullPolicy }}

  instances: {{ .Values.replicaCount }}
  
  bootstrap:
    initdb:
      database: {{ required ".Values.databaseName is required" .Values.databaseName | quote }}
      owner: {{ required ".Values.clientUsername" .Values.clientUsername | quote }}
      secret:
        name: {{ required ".Values.userCredsSecretName" .Values.userCredsSecretName | quote }}
  
  superuserSecret:
    name: {{ required ".Values.superuserCredsSecretName" .Values.superuserCredsSecretName | quote }}

  certificates:
    serverTLSSecret: lldap-postgres-server-tls
    serverCASecret: lldap-postgres-server-tls
    clientCASecret: lldap-postgres-client-tls
    replicationTLSSecret: lldap-postgres-client-tls

  {{- with .Values.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  
  storage:
    storageClass: {{ .Values.storageClass | quote }}
    size: {{ .Values.storageSize | quote }}
  
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: required
  
  resources:
    {{- toYaml .Values.resources | nindent 4 }}
  
  backup:
    barmanObjectStore:
      destinationPath: "s3://{{ include "postgresql.fullname" . }}-backup/"
      endpointURL: http://rook-ceph-rgw-k8s-store-ssd.rook-ceph.svc
      s3Credentials:
        accessKeyId:
          name: "{{ include "postgresql.fullname" . }}-backup-bucket"
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: "{{ include "postgresql.fullname" . }}-backup-bucket"
          key: AWS_SECRET_ACCESS_KEY
      wal:
        compression: gzip
        maxParallel: 8
    retentionPolicy: 30d
  
  monitoring:
    enablePodMonitor: true
