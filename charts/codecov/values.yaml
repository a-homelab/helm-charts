
config: {}
  # setup:
  #   admins:
  #     - service: github2
  #       username: asdf

# HTTP cookie secret
# https://docs.codecov.com/docs/configuration#cookie-secret
cookieSecret: ""
# Reference to an existing secret in the same namespace
cookieSecretSecretName: ""
# The secret key for the existing secret
cookieSecretSecretKey: cookieSecret

# Database URL
# https://docs.codecov.com/docs/configuration#database
# Used for validation during template rendering
databaseUrlRegexMatch: '^postgres:\/\/([\w\-]*):?([\w\-]*)@([\w\-\.]+):?(\d+)\/?([\w\-]+)$'

databaseUrl: "postgres://user:password@host:5432/db_name"
# Reference to an existing secret in the same namespace
databaseUrlSecretName: ""
# The secret key for the existing secret
databaseUrlSecretKey: url

# TimescaleDB URL
# https://docs.codecov.com/docs/implementing-flags-with-timescaledb
# Used for validation during template rendering
timescaledbUrlRegexMatch: '^postgres:\/\/([\w\-]*):?([\w\-]*)@([\w\-\.]+):?(\d+)\/?([\w\-]+)$'

timescaledbUrl: "postgres://user:password@host:5432/db_name"
# Reference to an existing secret in the same namespace
timescaledbUrlSecretName: ""
# The secret key for the existing secret
timescaledbUrlSecretKey: url

# Redis URL
# https://docs.codecov.com/docs/configuration#redis
# Used for validation during template rendering
redisUrlRegexMatch: '^redis:\/\/([\w\-]*)?:?([\w\-]*)?@?([\w\-\.]+):?(\d+)\/?([\w\-]+)$'

redisUrl: "redis://user:password@host:6379/db_name"
# Reference to an existing secret in the same namespace
redisUrlSecretName: ""
# The secret key for the existing secret
redisUrlSecretKey: url

# MinIO setup
# https://docs.codecov.com/docs/installing-codecov-self-hosted#prerequisites-to-installing-codecov-self-hosted
minio:
  enabled: false

  accessKeyAuth:
    enabled: false

    # MinIO credentials
    accessKeyId: ""
    secretAccessKey: ""

    # Reference to an existing secret in the same namespace
    accessCredentialsSecretName: ""
    # The secret key for the existing secret
    accessCredentialsAccessKeyIdSecretKey: accessKeyId
    # The secret key for the existing secret
    accessCredentialsSecretAccessKeySecretKey: secretAccessKey

# OAuth login setup
# https://docs.codecov.com/docs/set-up-oauth-login
oauth:
  enabled: false
  # Must be one of:
  # - github
  # - github_enterprise
  # - bitbucket
  # - bitbucket_server
  # - gitlab_enterprise
  provider: github

  # OAuth credentials
  clientId: ""
  clientSecret: ""

  # Reference to an existing secret in the same namespace
  clientCredentialsSecretName: ""
  # The secret key for the existing secret
  clientCredentialsClientIdSecretKey: clientId
  # The secret key for the existing secret
  clientCredentialsClientSecretSecretKey: clientSecret

gateway:
  replicaCount: 1

  image:
    repository: codecov/self-hosted-gateway
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  
  extraEnv: []
  
  extraEnvFrom: []

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: |
    {{- $rootCtx := . -}}
    {{- $componentName := "gateway" -}}
    {{- $componentCtx := get .Values $componentName -}}
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          {{- include "codecov.componentSelectorLabels" (list $rootCtx $componentName $componentCtx) | nindent 6 }}
      matchLabelKeys:
        - pod-template-hash
      nodeTaintsPolicy: Honor

  extraVolumeMounts: []

  extraVolumes: []

frontend:
  # Configuration for env vars
  # Sets the default web base hostname. Must be externally reachable.
  baseHost: ""
  # Sets the default api base hostname. Must be externally reachable.
  apiHost: ""
  apiPort: "443"
  # Scheme used as part of the replacement URL for the rewrites for the above hostnames
  scheme: https

  replicaCount: 1

  image:
    repository: codecov/self-hosted-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  extraEnv: []
  
  extraEnvFrom: []

  service:
    type: ClusterIP
    port: 8080

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: |
    {{- $rootCtx := . -}}
    {{- $componentName := "frontend" -}}
    {{- $componentCtx := get .Values $componentName -}}
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          {{- include "codecov.componentSelectorLabels" (list $rootCtx $componentName $componentCtx) | nindent 6 }}
      matchLabelKeys:
        - pod-template-hash
      nodeTaintsPolicy: Honor

  extraVolumeMounts: []
  
  extraVolumes: []

api:
  replicaCount: 1

  image:
    repository: codecov/self-hosted-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  extraEnv: []
  
  extraEnvFrom: []

  service:
    type: ClusterIP
    port: 8000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: |
    {{- $rootCtx := . -}}
    {{- $componentName := "api" -}}
    {{- $componentCtx := get .Values $componentName -}}
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          {{- include "codecov.componentSelectorLabels" (list $rootCtx $componentName $componentCtx) | nindent 6 }}
      matchLabelKeys:
        - pod-template-hash
      nodeTaintsPolicy: Honor

  extraVolumeMounts: []
  
  extraVolumes: []

worker:
  replicaCount: 1

  image:
    repository: codecov/self-hosted-worker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  extraEnv: []
  
  extraEnvFrom: []

  service:
    type: ClusterIP
    port: 9996

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: |
    {{- $rootCtx := . -}}
    {{- $componentName := "worker" -}}
    {{- $componentCtx := get .Values $componentName -}}
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          {{- include "codecov.componentSelectorLabels" (list $rootCtx $componentName $componentCtx) | nindent 6 }}
      matchLabelKeys:
        - pod-template-hash
      nodeTaintsPolicy: Honor

  extraVolumeMounts: []
  
  extraVolumes: []




replicaCount: 1


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
