replicaCount: 1

image:
  repository: ghcr.io/blakeblackshear/frigate
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

runtimeClassName: ""

strategy:
  type: Recreate

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  checksum/config: '{{ get .Values.config.data "config.yml" | sha256sum }}'

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

env: []

envFrom: []

livenessProbe: {}

readinessProbe:
  httpGet:
    path: /api/version
    port: http
    scheme: HTTP
  failureThreshold: 5
  successThreshold: 1
  periodSeconds: 10
  timeoutSeconds: 10

startupProbe:
  httpGet:
    path: /api/version
    port: http
    scheme: HTTP
  # 10 min for generating tensorrt models
  failureThreshold: 60
  successThreshold: 1
  periodSeconds: 10
  timeoutSeconds: 1

initContainers: []

service:
  type: ClusterIP

  ports:
    http:
      port: 8971
      appProtocol: http
    http-authless:
      port: 5000
      appProtocol: http
    rtsp:
      port: 8554
      appProtocol: tcp
    webrtc-tcp:
      port: 8555
      appProtocol: tcp
    webrtc-udp:
      port: 8555
      appProtocol: udp

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

httpRoute:
  enabled: false
  serviceHostname: ""
  gatewayHostname: ""
  parentRefs: []
    # - name: ""
    #   namespace: ""
    #   sectionName: ""

tlsRoute:
  enabled: false
  serviceHostname: ""
  gatewayHostname: ""
  parentRefs: []
    # - name: ""
    #   namespace: ""
    #   sectionName: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  enabled: false
  # minAvailable: 1

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

config:
  name: config
  data:
    config.yml: |-
      database:
        path: /config/frigate.db

secrets: []
